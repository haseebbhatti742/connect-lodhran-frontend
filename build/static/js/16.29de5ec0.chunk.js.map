{"version":3,"file":"static/js/16.29de5ec0.chunk.js","mappings":"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","sources":["views/isps/AddPackage.js"],"sourcesContent":["import { Alert, FormControl, FormHelperText, Grid, InputLabel, MenuItem, OutlinedInput, Select } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { Formik } from 'formik';\r\nimport jwt from 'jwtservice/jwtService';\r\nimport { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport SimpleButton from 'ui-component/SimpleButton';\r\n\r\nimport { AddPackageValidationSchema } from '../../utils/ValidationSchemas';\r\n\r\nfunction AddPackage() {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const { ispId, color } = useLocation().state;\r\n    const initialValues = {\r\n        isp: ispId,\r\n        name: '',\r\n        bandwidth: '',\r\n        rateType: '',\r\n        ratePerDay: 0,\r\n        purchaseRate: '',\r\n        saleRate: '',\r\n        validity: ''\r\n    };\r\n\r\n    const handleRatePerDayChange = (event, setFieldValue) => {\r\n        const { value } = event.target;\r\n        setFieldValue('ratePerDay', value);\r\n        setFieldValue('purchaseRate', (value * 31).toFixed(2));\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        setIsLoading(true);\r\n        jwt.createPackage(values)\r\n\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                alert('Package Added');\r\n                navigate(-1);\r\n            })\r\n            .catch((err) => {\r\n                setErrorMessage(err?.response?.data?.message);\r\n                setIsError(true);\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>Add Package Details</h3>\r\n            {isError && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n            <Formik initialValues={initialValues} validationSchema={AddPackageValidationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, isValid, touched, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel> Package Name </InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"ISP Name\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.name && errors.name && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-name\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.bandwidth && errors.bandwidth)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Bandwidth (In MBs)</InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"bandwidth\"\r\n                                        name=\"bandwidth\"\r\n                                        type=\"number\"\r\n                                        value={values.bandwidth}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Bandwidth (In MBs)\"\r\n                                        inputProps={{ min: 0 }}\r\n                                    />\r\n                                    {touched.bandwidth && errors.bandwidth && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-bandwidth\">\r\n                                            {errors.bandwidth}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.rateType && errors.rateType)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Rate Type </InputLabel>\r\n                                    <Select\r\n                                        variant=\"outlined\"\r\n                                        id=\"rateType\"\r\n                                        name=\"rateType\"\r\n                                        value={values.rateType}\r\n                                        onChange={handleChange}\r\n                                        label=\"Rate Type\"\r\n                                        sx={{ paddingTop: '15px' }}\r\n                                    >\r\n                                        <MenuItem value=\"day\">Per Day</MenuItem>\r\n                                        <MenuItem value=\"month\">Per Month</MenuItem>\r\n                                    </Select>\r\n                                    {touched.rateType && errors.rateType && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-rate-type\">\r\n                                            {errors.rateType}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.ratePerDay && errors.ratePerDay)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Rate Per Day </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"ratePerDay\"\r\n                                        name=\"ratePerDay\"\r\n                                        type=\"number\"\r\n                                        value={values.rateType === 'day' ? values.ratePerDay : 0}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={(event) => handleRatePerDayChange(event, setFieldValue)}\r\n                                        label=\"Rate Per Day\"\r\n                                        inputProps={{ min: 0 }}\r\n                                        disabled={values.rateType !== 'day'}\r\n                                    />\r\n                                    {touched.ratePerDay && errors.ratePerDay && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-rate-per-day\">\r\n                                            {errors.ratePerDay}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.purchaseRate && errors.purchaseRate)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Purchase Rate </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"purchaseRate\"\r\n                                        name=\"purchaseRate\"\r\n                                        type=\"number\"\r\n                                        value={values.purchaseRate}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Purchase Rate\"\r\n                                        inputProps={{ min: 0 }}\r\n                                    />\r\n                                    {touched.purchaseRate && errors.purchaseRate && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-purchase-rate\">\r\n                                            {errors.purchaseRate}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.saleRate && errors.saleRate)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Sale Rate </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"saleRate\"\r\n                                        name=\"saleRate\"\r\n                                        type=\"number\"\r\n                                        value={values.saleRate}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Sale Rate\"\r\n                                        inputProps={{ min: 0 }}\r\n                                    />\r\n                                    {touched.saleRate && errors.saleRate && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-sale-rate\">\r\n                                            {errors.saleRate}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.validity && errors.validity)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Validity (In days) </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"validity\"\r\n                                        name=\"validity\"\r\n                                        type=\"number\"\r\n                                        value={values.validity}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Validity (In Days)\"\r\n                                        inputProps={{ min: 0 }}\r\n                                    />\r\n                                    {touched.validity && errors.validity && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-validity\">\r\n                                            {errors.validity}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <Grid sx={{ width: '100%' }}>\r\n                                <SimpleButton isValid={!isValid || isLoading} title=\"Add Package\" color={color} />\r\n                            </Grid>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddPackage;\r\n"],"names":["theme","useTheme","navigate","useNavigate","isLoading","setIsLoading","useState","isError","setIsError","errorMessage","setErrorMessage","ispId","color","useLocation","state","initialValues","isp","name","bandwidth","rateType","ratePerDay","purchaseRate","saleRate","validity","severity","validationSchema","AddPackageValidationSchema","onSubmit","values","jwt","then","res","alert","catch","err","response","data","message","errors","isValid","touched","handleChange","handleBlur","handleSubmit","setFieldValue","fullWidth","error","Boolean","sx","typography","customInput","id","type","value","onBlur","onChange","label","inputProps","container","spacing","item","xs","min","variant","paddingTop","event","target","toFixed","handleRatePerDayChange","disabled","mt","width","title"],"sourceRoot":""}