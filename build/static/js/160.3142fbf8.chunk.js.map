{"version":3,"file":"static/js/160.3142fbf8.chunk.js","mappings":"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","sources":["views/isps/AddISP.js"],"sourcesContent":["import { Alert, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { Field, Formik } from 'formik';\r\nimport jwt from 'jwtservice/jwtService';\r\nimport { useState } from 'react';\r\nimport { CirclePicker } from 'react-color';\r\nimport { useNavigate } from 'react-router';\r\nimport SimpleButton from 'ui-component/SimpleButton';\r\n\r\nimport { AddISPValidationSchema } from '../../utils/ValidationSchemas';\r\n\r\nconst initialValues = {\r\n    name: '',\r\n    vlan: '',\r\n    openingBalance: '',\r\n    color: ''\r\n};\r\n\r\nfunction AddISP() {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMessage, setErrorMssage] = useState('');\r\n\r\n    const onSubmit = (values) => {\r\n        setIsLoading(true);\r\n        jwt.createIsp(values)\r\n\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                alert('Isp Added');\r\n                navigate('/dashboard/all-isps');\r\n            })\r\n            .catch((err) => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n                setErrorMssage(err?.response?.data?.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>Add ISP Details</h3>\r\n            {isError && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n            <Formik initialValues={initialValues} validationSchema={AddISPValidationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, isValid, touched, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <FormControl fullWidth error={Boolean(touched.name && errors.name)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel> ISP Name </InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                                value={values.name}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"ISP Name\"\r\n                                inputProps={{}}\r\n                            />\r\n                            {touched.name && errors.name && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-isp-name\">\r\n                                    {errors.name}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <FormControl fullWidth error={Boolean(touched.vlan && errors.vlan)} sx={{ ...theme.typography.customInput }}>\r\n                            <InputLabel> ISP VLAN </InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"vlan\"\r\n                                name=\"vlan\"\r\n                                type=\"number\"\r\n                                value={values.vlan}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"ISP VLAN\"\r\n                                inputProps={{ min: 0 }}\r\n                            />\r\n                            {touched.vlan && errors.vlan && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-isp-vlan\">\r\n                                    {errors.vlan}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <FormControl\r\n                            fullWidth\r\n                            error={Boolean(touched.openingBalance && errors.openingBalance)}\r\n                            sx={{ ...theme.typography.customInput }}\r\n                        >\r\n                            <InputLabel> Opening Balance </InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"openingBalance\"\r\n                                name=\"openingBalance\"\r\n                                type=\"number\"\r\n                                value={values.openingBalance}\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                label=\"Opening Balance\"\r\n                                inputProps={{ min: 0 }}\r\n                            />\r\n                            {touched.openingBalance && errors.openingBalance && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-isp-openingBalance\">\r\n                                    {errors.openingBalance}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n                        <div style={{ marginTop: '10px' }}>\r\n                            <Field name=\"color\">\r\n                                {({ field, meta }) => (\r\n                                    <div>\r\n                                        <label htmlFor=\"color\">Select a color:</label>\r\n                                        <CirclePicker\r\n                                            id=\"color\"\r\n                                            name=\"color\"\r\n                                            {...field}\r\n                                            onChange={(color) => {\r\n                                                setFieldValue('color', color.hex);\r\n                                            }}\r\n                                        />\r\n                                        {meta.touched && meta.error && (\r\n                                            <FormHelperText error id=\"standard-weight-helper-text-isp-vlan\">\r\n                                                {meta.error}\r\n                                            </FormHelperText>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </div>\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <Grid sx={{ width: '120px' }}>\r\n                                <SimpleButton isValid={!isValid || isLoading} title=\"Add ISP\" />\r\n                            </Grid>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddISP;\r\n"],"names":["initialValues","name","vlan","openingBalance","color","theme","useTheme","navigate","useNavigate","isLoading","setIsLoading","useState","isError","setIsError","errorMessage","setErrorMssage","severity","validationSchema","AddISPValidationSchema","onSubmit","values","jwt","then","res","alert","catch","err","response","data","message","errors","isValid","touched","handleChange","handleBlur","handleSubmit","setFieldValue","fullWidth","error","Boolean","sx","typography","customInput","id","type","value","onBlur","onChange","label","inputProps","min","style","marginTop","field","meta","htmlFor","hex","mt","width","title"],"sourceRoot":""}