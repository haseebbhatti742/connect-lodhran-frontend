{"version":3,"file":"static/js/687.41f4f7f0.chunk.js","mappings":"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","sources":["views/staff/AddStaff.js"],"sourcesContent":["import { Alert, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/system';\r\nimport { Field, Formik } from 'formik';\r\nimport jwt from 'jwtservice/jwtService';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport SimpleButton from 'ui-component/SimpleButton';\r\n\r\nimport { AddStaffValidationSchema } from '../../utils/ValidationSchemas';\r\n\r\nfunction AddStaff() {\r\n    const theme = useTheme();\r\n    const navigate = useNavigate();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const initialValues = {\r\n        fullname: '',\r\n        email: '',\r\n        password: '',\r\n        cnic: '',\r\n        mobile: '',\r\n        address: '',\r\n        sendWelcomeMessage: false\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        console.log('values');\r\n        console.log(values);\r\n        setIsLoading(true);\r\n        jwt.addStaff({ ...values, type: 'staff' })\r\n\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                alert('Staff Added');\r\n                navigate(-1);\r\n            })\r\n            .catch((err) => {\r\n                setErrorMessage(err?.response?.data?.message);\r\n                setIsError(true);\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>Add Staff Details</h3>\r\n            {isError && <Alert severity=\"error\">{errorMessage}</Alert>}\r\n            <Formik initialValues={initialValues} validationSchema={AddStaffValidationSchema} onSubmit={onSubmit}>\r\n                {({ values, errors, isValid, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.fullname && errors.fullname)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Full Name </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"fullname\"\r\n                                        name=\"fullname\"\r\n                                        type=\"text\"\r\n                                        value={values.fullname}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Full Name\"\r\n                                    />\r\n                                    {touched.fullname && errors.fullname && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-name\">\r\n                                            {errors.fullname}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.email && errors.email)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Email </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        type=\"text\"\r\n                                        value={values.email}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Full Name\"\r\n                                    />\r\n                                    {touched.email && errors.email && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-name\">\r\n                                            {errors.email}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.password && errors.password)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Password </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"password\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"User Id\"\r\n                                    />\r\n                                    {touched.password && errors.password && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-bandwidth\">\r\n                                            {errors.password}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.cnic && errors.cnic)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> CNIC </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"cnic\"\r\n                                        name=\"cnic\"\r\n                                        type=\"text\"\r\n                                        value={values.cnic}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"User Id\"\r\n                                    />\r\n                                    {touched.cnic && errors.cnic && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-bandwidth\">\r\n                                            {errors.cnic}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.mobile && errors.mobile)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Mobile </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"mobile\"\r\n                                        name=\"mobile\"\r\n                                        type=\"text\"\r\n                                        value={values.mobile}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"Mobile\"\r\n                                    />\r\n                                    {touched.mobile && errors.mobile && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-bandwidth\">\r\n                                            {errors.mobile}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <FormControl\r\n                                    fullWidth\r\n                                    error={Boolean(touched.address && errors.address)}\r\n                                    sx={{ ...theme.typography.customInput }}\r\n                                >\r\n                                    <InputLabel> Address </InputLabel>\r\n                                    <OutlinedInput\r\n                                        id=\"address\"\r\n                                        name=\"address\"\r\n                                        type=\"text\"\r\n                                        value={values.address}\r\n                                        onBlur={handleBlur}\r\n                                        onChange={handleChange}\r\n                                        label=\"address\"\r\n                                    />\r\n                                    {touched.address && errors.address && (\r\n                                        <FormHelperText error id=\"standard-weight-helper-text-purchase-rate\">\r\n                                            {errors.address}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <label htmlFor=\"sendWelcomeMessage\">\r\n                            <Field id=\"sendWelcomeMessage\" name=\"sendWelcomeMessage\" type=\"checkbox\" checked={values.sendWelcomeMessage} />\r\n                            Send Welcome Message\r\n                        </label>\r\n                        <Box sx={{ mt: 2 }}>\r\n                            <Grid sx={{ width: '100%' }}>\r\n                                <SimpleButton isValid={!isValid} title=\"Add Staff\" />\r\n                            </Grid>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddStaff;\r\n"],"names":["theme","useTheme","navigate","useNavigate","isLoading","setIsLoading","useState","isError","setIsError","errorMessage","setErrorMessage","severity","initialValues","fullname","email","password","cnic","mobile","address","sendWelcomeMessage","validationSchema","AddStaffValidationSchema","onSubmit","values","console","log","jwt","type","then","res","alert","catch","err","response","data","message","errors","isValid","touched","handleChange","handleBlur","handleSubmit","container","spacing","item","xs","fullWidth","error","Boolean","sx","typography","customInput","id","name","value","onBlur","onChange","label","htmlFor","checked","mt","width","title"],"sourceRoot":""}