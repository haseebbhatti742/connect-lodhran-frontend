{"version":3,"file":"static/js/728.05e11d22.chunk.js","mappings":"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","sources":["views/isps/AllPackages.js"],"sourcesContent":["import Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { THEME_COLOR_DARK, THEME_COLOR_LIGHT } from '../../utils/Constants';\r\nimport { useLocation } from 'react-router';\r\nimport { Alert, Button } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport jwt from 'jwtservice/jwtService';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'bandwidth', label: '\\u00a0Bandwidth', minWidth: 100 },\r\n    {\r\n        id: 'rateType',\r\n        label: 'Rate Type',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'ratePerDay',\r\n        label: 'Rate/Day\\u00a0',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toLocaleString('en-US')\r\n    },\r\n    {\r\n        id: 'purchaseRate',\r\n        label: 'Purchase Rate',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    },\r\n    {\r\n        id: 'saleRate',\r\n        label: 'Sale Rate',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    },\r\n    {\r\n        id: 'validity',\r\n        label: 'Validity',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    },\r\n    {\r\n        id: 'action',\r\n        label: 'Action',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    }\r\n];\r\n\r\nfunction createData(name, bandwidth, rateType, ratePerDay, purchaseRate, saleRate, validity, action) {\r\n    return { name, bandwidth, rateType, ratePerDay, purchaseRate, saleRate, validity, action };\r\n}\r\n\r\nconst deletePackage = (id) => {\r\n    console.log(id);\r\n};\r\n\r\nconst DeleteButton = ({ id }) => {\r\n    return (\r\n        <Button variant=\"contained\" color=\"error\" onClick={() => deletePackage(id)}>\r\n            Delete\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default function AllPackages() {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [rows, setRows] = useState([]);\r\n    const [companyName, setCompanyName] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const { ispId = '', color = THEME_COLOR_DARK } = useLocation().state;\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        jwt.getAllPackages(ispId)\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                setCompanyName(res?.data[0]?.isp?.name);\r\n                let rowsData = [];\r\n                res?.data?.map((item) =>\r\n                    rowsData.push(\r\n                        createData(\r\n                            item?.name,\r\n                            item?.bandwidth,\r\n                            item?.rateType === 'day' ? 'Per Day' : 'Per Month',\r\n                            item?.ratePerDay,\r\n                            item?.purchaseRate,\r\n                            item?.saleRate,\r\n                            item?.validity,\r\n                            <DeleteButton id={item?.id} />\r\n                        )\r\n                    )\r\n                );\r\n                setRows(rowsData);\r\n            })\r\n            .catch((err) => {\r\n                setErrorMessage(err?.response?.data?.message);\r\n                setIsError(true);\r\n                setIsLoading(false);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n            {isLoading && <h3>Loading...!</h3>}\r\n            {isError ? (\r\n                <Alert severity=\"error\">{errorMessage}</Alert>\r\n            ) : (\r\n                <>\r\n                    <TableContainer sx={{ maxHeight: 440 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell\r\n                                        colSpan={columns.length}\r\n                                        sx={{ fontSize: 'xx-large', backgroundColor: color, color: 'white' }}\r\n                                    >\r\n                                        {companyName}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    {columns.map((column) => (\r\n                                        <TableCell\r\n                                            key={column.id}\r\n                                            align={column.align}\r\n                                            style={{ minWidth: column.minWidth, backgroundColor: THEME_COLOR_LIGHT, color: 'white' }}\r\n                                        >\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                            {columns.map((column) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={column.id} align={column.align}>\r\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </>\r\n            )}\r\n        </Paper>\r\n    );\r\n}\r\n"],"names":["columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","DeleteButton","variant","color","onClick","console","log","deletePackage","AllPackages","page","setPage","useState","rowsPerPage","setRowsPerPage","rows","setRows","companyName","setCompanyName","isLoading","setIsLoading","isError","setIsError","errorMessage","setErrorMessage","ispId","THEME_COLOR_DARK","useLocation","state","useEffect","jwt","then","res","data","isp","name","rowsData","map","item","push","bandwidth","rateType","ratePerDay","purchaseRate","saleRate","validity","action","catch","err","response","message","sx","width","overflow","severity","maxHeight","stickyHeader","colSpan","length","fontSize","backgroundColor","column","style","THEME_COLOR_LIGHT","slice","row","hover","role","tabIndex","code","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","target"],"sourceRoot":""}